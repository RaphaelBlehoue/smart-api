<?php

namespace Labs\AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * QuotationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class QuotationRepository extends EntityRepository
{

    public function getLastInsert()
    {
        $qb = $this->createQueryBuilder('p');
        $qb->orderBy('p.id', 'DESC');
        $qb->setMaxResults(1);
        return $qb->getQuery()->getResult();
    }

    public function getProformaDemand($id, $reference)
    {
        $qb = $this->createQueryBuilder('proforma');
        $qb->leftJoin('proforma.clients', 'clt');
        $qb->addSelect('clt');
        $qb->leftJoin('proforma.services', 'ser');
        $qb->addSelect('ser');
        $qb->leftJoin('proforma.conditions', 'cdt');
        $qb->addSelect('cdt');
        $qb->leftJoin('proforma.compagny', 'compagny');
        $qb->addSelect('compagny');
        $qb->leftJoin('proforma.proformasproducts', 'proformasproducts');
        $qb->addSelect('proformasproducts');
        $qb->leftJoin('proformasproducts.products', 'prd');
        $qb->addSelect('prd');
        $qb->leftJoin('prd.unites','u');
        $qb->addSelect('u');
        $qb->where($qb->expr()->eq('proforma.id', ':id'), $qb->expr()->eq('proforma.reference',':reference'));
        $qb->setParameter('id', $id);
        $qb->setParameter('reference', $reference);
        return $qb->getQuery()->getResult();
    }

    public function getProformaInfo($proforma)
    {
        $qb = $this->createQueryBuilder('p');
        $qb->where($qb->expr()->eq('p.id', ':proforma'));
        $qb->setParameter(':proforma',$proforma);
        return $qb->getQuery()->getSingleResult();
    }
}
