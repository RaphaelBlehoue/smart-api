<?php

namespace Labs\AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * InventoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InventoryRepository extends EntityRepository
{

    public function getStock($id)
    {
        $qb = $this->createQueryBuilder('s');
        $qb->leftJoin('s.product', 'p');
        $qb->where($qb->expr()->eq('p.id',':id'));
        $qb->setParameter('id',$id);
        return $qb->getQuery()->getResult();
    }

    public function getStockCountPrdEntrIn($ent)
    {
        $qb = $this->createQueryBuilder('s');
        $qb->leftJoin('s.entrepot','ent');
        $qb->where($qb->expr()->eq('ent.id', ':ent'));
        //$qb->setParameter('prd',$prd);
        $qb->setParameter('ent',$ent);
        return $qb->getQuery()->getResult();
    }

    public function getStockCountPrdEntrOut($prd, $ent)
    {
        $qb = $this->createQueryBuilder('s');
        $qb->leftJoin('s.product', 'prd');
        $qb->leftJoin('s.entrepot', 'ent');
        $qb->where($qb->expr()->eq('s.product',':prd'), $qb->expr()->eq('s.entrepot', ':ent'), $qb->expr()->eq('s.code_mouv',0));
        $qb->setParameter('prd',$prd);
        $qb->setParameter('ent',$ent);
        return $qb->getQuery()->getResult();
    }

    public function getMouvStock()
    {
        $qb = $this->createQueryBuilder('s');
        $qb->where($qb->expr()->eq('s.code_mouv', 1));
        $qb->groupBy('s.sku');
        return $qb->getQuery()->getResult();
    }
}
